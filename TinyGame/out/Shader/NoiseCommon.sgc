#pragma once

#include "Common.sgc"

//reference :https://github.com/TheAllenChou/unity-cj-lib/blob/master/Unity%20CJ%20Lib/Assets/CjLib/Shader/Noise/RandomNoise.cginc

float Rand(float s)
{
	return frac(sin(mod(s, 6.2831853)) * 43758.5453123);
}

float Rand(float2 s)
{
	float d = dot(s + 0.1234567, float2(1111112.9819837, 78.237173));
	float m = mod(d, 6.2831853);
	return frac(sin(m) * 43758.5453123);
}

float Rand(float3 s)
{
	float d = dot(s + 0.1234567, float3(11112.9819837, 378.237173, 3971977.9173179));
	float m = mod(d, 6.2831853);
	return frac(sin(m) * 43758.5453123);
}

float RandRange(float s, float a, float b)
{
	return a + (b - a) * Rand(s);
}

float2 RandRange(float2 s, float2 a, float2 b)
{
	return a + (b - a) * Rand(s);
}

float3 RandRange(float3 s, float3 a, float3 b)
{
	return a + (b - a) * Rand(s);
}

float3 RandRangeSeparate(float3 s, float3 a, float3 b)
{
	float3 result;
	result.x = RandRange(s.x, a.x, b.x);
	result.y = RandRange(s.y, a.y, b.y);
	result.z = RandRange(s.z, a.z, b.z);

	return result;
}

float2 RandUVec(float2 s)
{
	return normalize(float2(Rand(s), Rand(s * 1.23456789)) - 0.5);
}

float3 RandUVec(float3 s)
{
	return normalize(float3(Rand(s), Rand(s * 1.23456789), Rand(s * 9876.54321)) - 0.5);
}

float2 RandVec(float2 s)
{
	return RandUVec(s) * Rand(s * 9876.54321);
}

float3 RandVec(float3 s)
{
	return RandUVec(s) * Rand(s * 1357975.31313);
}