#include "Common.sgc"

struct VSOutputParameters
{
	float3 color;
	float2 UVs;
};

layout(location = 0) vs_out VSOutputParameters VSOutput;

#if VERTEX_SHADER

layout(location = 0) in float2 position;
layout(location = 1) in float2 uv;
layout(location = 2) in float3 color;

void MainVS()
{
	gl_Position = float4(position, 0.0, 1.0);

	VSOutput.color = color;
	VSOutput.UVs = uv;
}

#endif

#if PIXEL_SHADER

layout(location = 0) out float4 outColor;
layout(binding = 0) uniform sampler2D SamplerColor;

#if 0
layout(binding = 1) uniform UBO
{
	vec4 BaseColor;

} Global;
#endif

void MainPS() 
{

	float4 color = texture(SamplerColor, VSOutput.UVs, 0);

	//outColor = vec4(UVs, 0, 1.0);
	outColor = color;
}

#endif