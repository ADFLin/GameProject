#ifndef SHADER_COMPILING
#define SHADER_COMPILING 0
#endif


#if SHADER_COMPILING

#define layout( x )
#define uniform

#define mat4 float4x4
#define mat3 float3x3

#else

#define SV_POSITION
#define TEXCOORD0
#define TEXCOORD1
#define TEXCOORD2
#define TEXCOORD3
#define TEXCOORD4
#define TEXCOORD5
#define TEXCOORD6
#define TEXCOORD7
#define TEXCOORD8

#endif

#define MEMBER_OUTPUT( DECL , NAME ) DECL : NAME

#define SHADER_ENTRY_START(NAME) void NAME(
#define SHADER_INPUT(TYPE_DECL , LOC) in TYPE_DECL : LOC,
#define SHADER_OUTPUT(TYPE_DECL , LOC) out TYPE_DECL,
#define SHADER_OUTPUT_LAST(TYPE_DECL , LOC)  out TYPE_DECL
#define SHADER_ENTRY_END(NAME) ) 

#define VS_ENTRY_START(NAME) void NAME( out float4 SvPosition : SV_POSITION,
#define VS_INPUT(TYPE_DECL , LOC) SHADER_INPUT(TYPE_DECL , LOC)
#define VS_OUTPUT(TYPE_DECL , LOC) SHADER_OUTPUT(TYPE_DECL , LOC)
#define VS_OUTPUT_LAST(TYPE_DECL , LOC) SHADER_OUTPUT_LAST(TYPE_DECL , LOC) 
#define VS_ENTRY_END(NAME) SHADER_ENTRY_END(NAME)

#define PS_ENTRY_START(NAME) void NAME( in float4 SvPosition : SV_POSITION,
#define PS_INPUT(TYPE_DECL , LOC) in TYPE_DECL,
#define PS_OUTPUT(TYPE_DECL , LOC) out TYPE_DECL : SV_Target##LOC,
#define PS_OUTPUT_LAST(TYPE_DECL , LOC) out TYPE_DECL : SV_Target##LOC
#define PS_ENTRY_END(NAME) SHADER_ENTRY_END(NAME)

#define DEFINE_TEXTURE( TYPE , NAME )\
	 uniform TYPE NAME;\
	 uniform SamplerState NAME##Sampler;

#define TEXTURE_SAMPE( NAME , UV )\
	NAME.Sample(NAME##Sampler, UV)