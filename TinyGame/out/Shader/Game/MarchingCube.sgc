#include "Common.sgc"
#include "ViewParam.sgc"


#if VERTEX_SHADER

uniform float3 CubeSize;
uniform float3 CubeOffset;
uniform int3   DataDim;
uniform float4x4 XForm;

const float2 VertexMap[] =
{
	float2(1,  1),
	float2(-1,  1),
	float2(-1, -1),
	float2(1, -1),
};

layout(location = 0) out flat int3 DataCoord;
void ShowValueVS()
{
	int dataIndex = gl_InstanceID;

	int temp = dataIndex % (DataDim.x * DataDim.y);
	DataCoord.x = temp % DataDim.x;
	DataCoord.y = temp / DataDim.x;
	DataCoord.z = dataIndex / (DataDim.x * DataDim.y);
	float3 worldPos = float3(DataCoord) * CubeSize + CubeOffset;

	float dist = length(worldPos - View.worldPos);
	gl_PointSize = lerp(20, 1, saturate(dist / 2) );
	gl_Position = View.worldToClip * float4( worldPos , 1.0 );
}

#endif


#if PIXEL_SHADER

layout(location = 0) in flat int3 DataCoord;
uniform sampler3D DataTexture;
out float4 OutColor;
void ShowValuePS()
{
	float value = texelFetch(DataTexture, DataCoord, 0).r;
	OutColor = float4(value, value, value, 1.0);
	//OutColor = float4(1, 0, 0, 1);
}

#endif
