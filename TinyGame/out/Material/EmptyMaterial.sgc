#define MATERIAL_TEXCOORD_NUM 1
#define MATERIAL_BLENDING_MASKED 0

#include "MaterialCommon.sgc"
#include "ViewParam.sgc"

uniform sampler2D BaseTexture;

#if VERTEX_SHADER

void  CalcMaterialInputVS(inout MaterialInputVS inputVS, inout MaterialParametersVS parameters)
{
	inputVS.worldOffset = float3(0.0);
}

#endif //VERTEX_SHADER

#if PIXEL_SHADER

void CalcMaterialInputPS(inout MaterialInputPS inputPS, inout MaterialParametersPS parameters)
{
	inputPS.shadingModel = SHADINGMODEL_DEFAULT_LIT;
	inputPS.baseColor = texture2D(BaseTexture, parameters.texCoords[0].xy).rgb * parameters.vectexColor.rgb;
	inputPS.metallic  = 0.1;
	inputPS.roughness = 0.9;
	inputPS.specular  = 0.1;
	float2 value = 2 * frac(5 * (parameters.texCoords[0].xy)) - 1;
	//inputPS.mask = value.x * value.y > 0 ? 1 : 0;
	//inputPS.emissiveColor = abs( float3(0.3, 0.3, 0.3) * parameters.worldNormal );
}

#endif //PIXEL_SHADER