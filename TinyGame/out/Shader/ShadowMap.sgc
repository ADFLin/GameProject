#include "Common.sgc"

#define USE_POINT_LIGHT 1
#define USE_SHADOW_MAP 1

uniform float2 DepthParam;

struct VSOutputParameters
{
	float3 cameraOffsetInView;
};

#if VERTEX_SHADER

out VSOutputParameters VSOutput;
void MainVS()
{
	VSOutput.cameraOffsetInView = float3(gl_ModelViewMatrix * gl_Vertex);
	gl_Position = ftransform();
}

#endif //VERTEX_SHADER

#if PIXEL_SHADER

in VSOutputParameters VSOutput;
void MainPS() 
{
#if USE_POINT_LIGHT
	float depth = ( length(VSOutput.cameraOffsetInView) - DepthParam.x ) / ( DepthParam.y - DepthParam.x );
#else
	float depth = ( -VSOutput.cameraOffsetInView.z  - DepthParam.x ) / ( DepthParam.y - DepthParam.x );
#endif
	//depth = 1.0;
	gl_FragColor = float4(depth,depth,depth,1);
}

#endif //PIXEL_SHADER