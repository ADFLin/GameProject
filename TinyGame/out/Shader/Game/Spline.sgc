#include "Common.sgc"

struct VertexOutputParamVSToPS
{
	float3 color;
};

#define VertexOutputParameters VertexOutputParamVSToPS

#include "SplineCommon.sgc"

#if DOMAIN_SHADER
VertexOutputParamVSToPS InterpolantParameter(
	in float4 factor,
	in VertexOutputParamVSToPS a,
	in VertexOutputParamVSToPS b,
	in VertexOutputParamVSToPS c,
	in VertexOutputParamVSToPS d)
{
	VertexOutputParamVSToPS result;
	INTERPOLANT_PARAMETER_MEMBER(result, color);

	return result;
}
#endif

uniform mat4 XForm;

#if VERTEX_SHADER

layout( location = ATTRIBUTE_POSITION ) in float2 VertexInput_pos;
layout( location = ATTRIBUTE_COLOR ) in float3 VertexInput_color;

layout(location = 0) out VertexOutputParameters OutputVS;

void MainVS()
{
	OutputVS.color = VertexInput_color;
	gl_Position = XForm * float4( VertexInput_pos.xy , 0 , 1 );
}

#endif //VERTEX_SHADER

#if PIXEL_SHADER

layout(location = 0) in VertexOutputParamVSToPS InputPS;

out float4 OutColor;
void MainPS()
{
	OutColor = float4(InputPS.color, 0);

}
#endif